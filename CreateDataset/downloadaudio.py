## Got this from here: https://stackoverflow.com/a/75784205/13249791
from yt_dlp import YoutubeDL
import os

audio_dir = 'audio'
os.makedirs(audio_dir, exist_ok=True)

# This was generated by GPT 
# Function to rename files sequentially
def rename_files_sequentially(directory: str) -> bool:
    try:
        renamed_files = []
        mp3_files = [f for f in os.listdir(directory) if f.endswith('.mp3')]
        existing_files = set(os.listdir(directory))

        for index, filename in enumerate(sorted(mp3_files), start=1):
            new_filename = f'audio{index}.mp3'
            old_filepath = os.path.join(directory, filename)
            new_filepath = os.path.join(directory, new_filename)
            
            # Ensure the new filename does not already exist
            while new_filename in existing_files:
                index += 1
                new_filename = f'audio{index}.mp3'
                new_filepath = os.path.join(directory, new_filename)
            
            os.rename(old_filepath, new_filepath)
            renamed_files.append(new_filepath)         
            existing_files.add(new_filename)
        
        return bool(renamed_files)
    except Exception as e:
        print(f"An error occurred while renaming files: {e}")
        return False

# I wrote this one trust XD
# Function to download audio from a YouTube playlist
def downloading_audio() -> bool:
    video_url = 'https://youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ&si=02y_8wDBbH932Jwb' # The Zero to Hero playlist
    try:
        video_info = YoutubeDL().extract_info(url=video_url, download=False)
        options = {
            'format': 'bestaudio/best',
            'keepvideo': False,
            'outtmpl': 'audio/%(title)s.mp3',
        }
        with YoutubeDL(options) as ydl:
            ydl.download([video_info['webpage_url']])
    except Exception as e:
        print(f"An error occurred during the download: {e}")
        return False

    # Rename the files after downloading
    return rename_files_sequentially(audio_dir)

if __name__ == '__main__':
    success = downloading_audio()
    if success:
        print("Download and renaming completed successfully.")
    else:
        print("There was an error during the download or renaming process.")
